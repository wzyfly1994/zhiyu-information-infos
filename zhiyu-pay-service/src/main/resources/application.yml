spring:
  profiles:
    active: dev
  application:
    name: pay-service
  cloud:
    consul:
      host: ${service.registry.consul-host}
      port: ${service.registry.consul-port}
      discovery:
        health-check-interval: 5s
        serviceName: ${spring.application.name}
        health-check-url: http://${service.registry.expose-host}:${service.registry.expose-port}${management.server.servlet.context-path}/info
        enabled: true
        # 默认设置queryPassing=false，即返回所有的服务，包括down掉的。通过配置改为true则可返回所有健康检查通过的服务
        query-passing: true
        prefer-ip-address: true
        tags: pay-instance1
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://127.0.0.1:3306/wzy?useUnicode=true&characterEncoding=utf8&serverTimezone=Asia/Shanghai&useSSL=false&allowPublicKeyRetrieval=true
    username: root
    password: 123456
  redis:
    host: 127.0.0.1
    password: 123456
    database: 2
    port: 6379
    timeout: 5000
    expire: 7200
    testWhileIdle: true
    lettuce:
      pool:
        max-active: 100
        max-idle: 10
        max-wait: 100000

mybatis-plus:
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl  #打印sql


#rocketmq:
#  name-server: http://MQ_INST_
#  producer:
#    access-key: 123456
#    secret-key: 123456
#    group: GID
#    sendMessageTimeout: 300000
#    topic:
#      log: GID
#    tag:
#      log: GID

pay:
  config:
    signType: MD5
    privateKey: MIICdgIBADANBgkqhkiG9w0BAQEFAASCAmAwggJcAgEAAoGBAJo9Sl/nAqb7pEyBFnsRCJVTnV8ReEoqFNC1UzE7YWIJUKluGwtQXFNGZlxa+LzkzeDJTgpx9bwZlajejjs3c3ODzxlNcAFh/svSQlBnwyZeqUNvMXehT4SmtgVQvtEzRx0PeYQAIPgbs+mHBsYnp75tVzGip/eoL+1bsBrrjY+ZAgMBAAECgYABgnddJDw+KQ94KtMVWses+hYu+6zwx7DC9zD5T4jtOV6dyrfyJScpYhj3FYvcNQtMnf1imq/XSrlqH12G6yZfd4X8uQZvK8U6Bc21dTyaePvjOSkvMYT7Fx6wm99fcntOdvL4w3CsCEZL3rcUpznWCAlgntzBswSWfQxwKLuSZQJBANFnZya8altxerFa7XpAbtJzIM4YxYASE26GWTlu0hrW+RLvtR2d3dgUB6bUrlRKll2AFsrEdoR5WgZqc7wRPIUCQQC8j3ejiTAEYL2cVOTLmlb4uLduyZLHg3rMKK00HVLIt5mjPv4c8g/tzrfn/2unMDIHvC7XlBmGQUx1h0LnhC0FAkBt/qvfXA9eE0DIkqO1mMzdvN3ZhIeR22zbnLSXh4/Ty2IwQTvY38jdLMBMMOGVo0xSturB/erncTsJrbc3bbJlAkBaIrquEgZCEXySHoLAUScB/kqxSuo/NTqeHVOuddX83Mc0oggXDh9PLmH7JL3xTbicufgqVUFeTBiglegFg8mBAkEAzEb4GRosVmhSIHfOsIjmyZU1ffhz4sqTMs/FOBAvWsbaNectIKisCEp1KZ4AwVo41/kdibCH5M1Yuuh3PZf4Vg==
    publicKey: MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCaPUpf5wKm+6RMgRZ7EQiVU51fEXhKKhTQtVMxO2FiCVCpbhsLUFxTRmZcWvi85M3gyU4KcfW8GZWo3o47N3Nzg88ZTXABYf7L0kJQZ8MmXqlDbzF3oU+EprYFUL7RM0cdD3mEACD4G7PphwbGJ6e+bVcxoqf3qC/tW7Aa642PmQIDAQAB


rsa:
  encrypt:
    open: true # 是否开启加密 true  or  false
    showLog: true # 是否打印加解密log true  or  false
    publicKey:  MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCaPUpf5wKm+6RMgRZ7EQiVU51fEXhKKhTQtVMxO2FiCVCpbhsLUFxTRmZcWvi85M3gyU4KcfW8GZWo3o47N3Nzg88ZTXABYf7L0kJQZ8MmXqlDbzF3oU+EprYFUL7RM0cdD3mEACD4G7PphwbGJ6e+bVcxoqf3qC/tW7Aa642PmQIDAQAB
    privateKey: MIICdgIBADANBgkqhkiG9w0BAQEFAASCAmAwggJcAgEAAoGBAJo9Sl/nAqb7pEyBFnsRCJVTnV8ReEoqFNC1UzE7YWIJUKluGwtQXFNGZlxa+LzkzeDJTgpx9bwZlajejjs3c3ODzxlNcAFh/svSQlBnwyZeqUNvMXehT4SmtgVQvtEzRx0PeYQAIPgbs+mHBsYnp75tVzGip/eoL+1bsBrrjY+ZAgMBAAECgYABgnddJDw+KQ94KtMVWses+hYu+6zwx7DC9zD5T4jtOV6dyrfyJScpYhj3FYvcNQtMnf1imq/XSrlqH12G6yZfd4X8uQZvK8U6Bc21dTyaePvjOSkvMYT7Fx6wm99fcntOdvL4w3CsCEZL3rcUpznWCAlgntzBswSWfQxwKLuSZQJBANFnZya8altxerFa7XpAbtJzIM4YxYASE26GWTlu0hrW+RLvtR2d3dgUB6bUrlRKll2AFsrEdoR5WgZqc7wRPIUCQQC8j3ejiTAEYL2cVOTLmlb4uLduyZLHg3rMKK00HVLIt5mjPv4c8g/tzrfn/2unMDIHvC7XlBmGQUx1h0LnhC0FAkBt/qvfXA9eE0DIkqO1mMzdvN3ZhIeR22zbnLSXh4/Ty2IwQTvY38jdLMBMMOGVo0xSturB/erncTsJrbc3bbJlAkBaIrquEgZCEXySHoLAUScB/kqxSuo/NTqeHVOuddX83Mc0oggXDh9PLmH7JL3xTbicufgqVUFeTBiglegFg8mBAkEAzEb4GRosVmhSIHfOsIjmyZU1ffhz4sqTMs/FOBAvWsbaNectIKisCEp1KZ4AwVo41/kdibCH5M1Yuuh3PZf4Vg==


